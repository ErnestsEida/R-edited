= stylesheet_link_tag 'posts'
= stylesheet_link_tag 'comments'

= render partial: "awards_modal"

.dflex.justify-content-center
  - if @post.banner.present?
    = image_tag @post.banner, class: "card-img-top"
  .card.post
    span
      - @post.tag_references.each do |reference|
          = link_to reference.tag.title, tag_path(reference.tag), class: "badge rounded-pill bg-secondary"
    small.text-muted
      i
        = "#{t('post.posted_by')} #{@post.user.username}"
    h4.card-title
      = @post.title
      - if user_signed_in?
         i#bookmark_icon.bi class="#{@bookmarked ? 'bi-bookmark' : 'bi-bookmark-fill'}" data-id="#{@post.id}" data-toggle="tooltip" title="Bookmark post"
         i#award_icon.bi.bi-gift data-bs-toggle="modal" data-bs-target="#awardsSelectModal" data-toggle="tooltip" title="Award post"
    .d-flex.flex-row-reverse
      - if policy(@post).edit?
        = link_to edit_community_post_path(@post.community.id, @post.id), title: "Edit post", data: { toggle: "tooltip" }, method: :get, class: "action-button remove-decorations" do
          i.bi.bi-pencil
      - if policy(@post).destroy?
        = link_to community_post_path(@post.community.id, @post.id), title: "Delete post", data: { toggle: "tooltip", confirm: "Are you sure you want to delete this post?" }, class: "action-button remove-decorations"
          i.bi.bi-trash
    hr
    .card-text
      == @post.content
    hr
    #post-awards
      - @post.awards.includes(:image_blob).each do |award|
        = image_tag award.image, class: "post-award"
    hr
    span
      - @post.tag_references.each do |reference|
          = link_to reference.tag.title, tag_path(reference.tag), class: "badge rounded-pill bg-secondary"
  p.comments-header
    = "#{t('post.comments')}(#{@post.comments.count})"
  - if user_signed_in?
    .new-comment-block
      = form_with model: [@post.community, @post, @comment], method: :post do |f|
        = f.label :content, t('post.new_comment'), class: "form-label"
        = f.text_area :content, placeholder: t('your_text_here'), class: "form-control js-comment-input"
        = f.hidden_field :post_id, value: @post.id
        = f.submit t('post_action'), class: "btn btn-primary btn-sm"
  - @comments.each do |comment|
    .comment-block
      .card
        .card-header class="text-muted"
          = comment.user.username
          |   commented
        .card-body
          = comment.content
        .card-footer
          - if policy(comment).destroy?
            = link_to "Delete", comment_path(comment.id), method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger btn-sm"
= paginate @comments
